Create VPC
Create Internet Gateway
Create Custom Route Table
Create a Subnet
Associate subnet with Route Table
Create Security Group to allow port 22, 80, 443
Create a network interface with an IP in the subnet that was created in step 4
Assign an elastic IP to the network interface created in step 7
Create Ubuntu server and install/enable apache2



provider "aws" {
  region     = "us-east-1"
  access_key = "****"
  secret_key = "****"
}

resource "aws_vpc" "project-vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.project-vpc.id
  tags = {
    Name = "Project-IG"
  }
}

resource "aws_route_table" "project-routetable" {
  vpc_id = aws_vpc.project-vpc.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }
  route {
    ipv6_cidr_block        = "::/0"
    gateway_id             = aws_internet_gateway.gw.id
  }
}

resource "aws_subnet" "project-subnet1" {
  vpc_id = aws_vpc.project-vpc.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "us-east-2a"

  tags = {
      Name = "project-subnet"
  }
}

resource "aws_route_table_association" "a" {
  subnet_id      = aws_subnet.project-subnet1.id
  route_table_id = aws_route.project-routetable.id
}

resource "aws_security_group" "allow-web" {
  name        = "allow_web_traffic"
  description = "Allow Web inbound traffic"
  vpc_id      = aws_vpc.project-vpc.id

  ingress = {
    description      = "HTTPS"
    from_port        = 443
    to_port          = 443
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0./0"]
  }
    ingress = {
    description      = "HTTP"
    from_port        = 80
    to_port          = 80
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0./0"]  
  }
    ingress = {
    description      = "SSH"
    from_port        = 2
    to_port          = 2
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0./0"]  
  }
    egress = {
      from_port        = 0
      to_port          = 0
      protocol         = "-1"
      cidr_blocks      = ["0.0.0.0/0"]
  }
  
  tags = {
    Name = "allow-project_web"
  }
}

resource "aws_network_interface" "web-server" {
  subnet_id       = aws_subnet.project-subnet1.id
  private_ips     = ["10.0.1.50"]
  security_groups = [aws_security_group.allow_web.id]

}

resource "aws_eip" "one" {
  vpc                       = true
  network_interface         = aws_network_interface-web-server.id
  associate_with_private_ip = "10.0.1.50"
  depends_on                = [aws_internet_gateway.gw]
}

resource "aws_instance" "web-server-instance" {
  ami           =  ami-087c17d1fe0178315
  instance_type = "t2.micro"
  availability_zone = "us-east-2a"
  key_name = "Project-key"

  network_interface" {
      device_index = 0
      network_interface_id = aws_network_interface.web-server.id
  }
  user_data = <<-EOF
              sudo apt update -y
	      sudo apt install apache2 -y
              sudo systemctl start apache2
              sudo bash -c "echo the very first web server > /var/www/html/index.html"
              EOF
}